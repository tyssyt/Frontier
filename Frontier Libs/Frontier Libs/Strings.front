export class Strings:

    export static parseInt(string: char[]) -> int64 {
        res: int64 = 0;

        i: int32 = 0;
        //check for first char '-'
        isNegative := string[0] =*= 45;

        if isNegative {
            i = i+1;
        }

        while i < string.size {
            res = res * 10;
            res = res + charToInt(string[i]);
            i = i+1;
        }

        if isNegative {
            res = -1 * res;
        }

        return res;
    }

    export static toCString(fString: char[]) -> char[c] {
        return withZeroTerminator(fString).c_array();
    }

    export static withZeroTerminator(fString: char[]) -> char[] { //TODO should assert that fString does not contain 0
        if fString[fString.size - 1] =*= 0 {
            return fString;
        }
        cString := new char[fString.size + 1];
        for c, i : fString {
            cString[i] = c; //TODO replace by arrayCopy
        }
        cString[fString.size] = 0;
        return cString;
    }

    static charToInt(c: char) -> int32 {
        //assert c >= 48 && c <= 57 //TODO
        return c - 48;
    }