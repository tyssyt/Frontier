import Native;
import Strings;

export namespace IO:

    export print(chara: char) {
        Native.putchar(chara);
    }

    export printInt(l: int64) {
        print(Strings.intToString(l));
    }

    export print(string: [char]) {
        for c : string {
            print(c);
        }
    }

    export printLine(string: [char]) {
        for c : string {
            print(c);
        }
        print("\n");
    }

    export getChar() -> char {
        return Native.getchar().toChar;
    }

    export getInt() -> int64 {
        res: int64 = 0;

        //check for first char '-'
        nextChar := getChar();
        isNegative := nextChar =*= 45;

        if isNegative {
            nextChar = getChar();
        }

        while nextChar >= 48 && nextChar <= 57 {
            res = res * 10;
            res = res + charToInt(nextChar);
            nextChar = getChar();
        }

        if isNegative {
            res = res * -1;
        }

        return res;
    }

    isWhitspace(c: char) -> bool {
        return (c >= 9 && c <= 13) || c =*= 32;
    }

    charToInt(c: char) -> int32 {
        return c - 48;
    }

export class File:
    export static modeWrite: native[char] = Strings.toCString("w\0"); //TODO there is still a bug with the compiler assuming "w" is char even though here it should be string
    export static modeAppend: native[char] = Strings.toCString("a\0");

    cFile: CFile;

    export static fOpen(filename: [char], mode: native[char]) -> File {
        return File(cFile = CFile.fopen(Strings.toCString(filename), mode));
    }

    export write(chara: char) {
        writeNoFlush(chara);
        cFile.fflush();
    }

    export writeInt(l: int64) {
        write(Strings.intToString(l));
    }

    export write(string: [char]) {
        for c : string {
            writeNoFlush(c);
        }
        cFile.fflush();
    }

    export writeLine(string: [char]) {
        for c : string {
            writeNoFlush(c);
        }
        writeNoFlush("\n");
        cFile.fflush();
    }

    writeNoFlush(chara: char) {
        CFile.fputc(chara, cFile);
    }