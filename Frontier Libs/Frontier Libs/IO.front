import Native;
import Stringer;

export namespace IO: //TODO many duplications from File

    export print(chara: char) {
        Native.putchar(chara);
    }

    export print(string: [char]) {
        for c : string {
            print(c);
        }
    }

    export printLine(string: [char]) {
        for c : string {
            print(c);
        }
        print("\n");
    }

    export print <Tup*> (string: [char], args: Tup) {
        print(Stringer.format(string, args));
    }

    export printLine <Tup*> (string: [char], args: Tup) {
        printLine(Stringer.format(string, args));
    }

    export print(s: native[char]) {
        i : int32 = 0;
        while true {
            if s[i, i] == 0 {
                break;
            }
            IO.print(s[i,i]);
            i = i+1;
        }
    }

    export printLine(s: native[char]) {
        print(s);
        print("\n");
    }

    export printWide(s: native[char]) {  //TODO actually handle wide chars
        i : int32 = 0;
        while true {
            if s[i, i] == 0 {
                break;
            }
            IO.print(s[i,i]);
            i = i+2;
        }
    }

    export printLineWide(s: native[char]) {
        printWide(s);
        print("\n");
    }

    export getChar() -> char {
        return Native.getchar().toChar;
    }

    export getInt() -> int64? {
        res: int64 = 0;

        //check for first char '-'
        nextChar := getChar();
        isNegative := nextChar =*= 45;

        if isNegative {
            nextChar = getChar();
        }

        if nextChar < 48 || nextChar > 57 {
            return null;
        }

        while nextChar >= 48 && nextChar <= 57 {
            res = res * 10;
            res = res + charToInt(nextChar);
            nextChar = getChar();
        }

        if isNegative {
            res = res * -1;
        }

        return res;
    }

    charToInt(c: char) -> int32 {
        return c - 48;
    }