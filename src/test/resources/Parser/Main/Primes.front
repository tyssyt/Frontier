import IO;
import Strings;
import Stringer;
import List;


class Sieb:

    primes: List<int32>;

    static create(expectedPrimes: int32 = 50) -> Sieb {
        res := Sieb(primes = List<int32>.create(expectedPrimes));
        res.primes.add(2);
        return res;
    }

    nextPrime() -> int32 {
        if Main.verbose {
            IO.printLine(Stringer.format("computing Prime Number %", primes.size()+1, ""));
        }

        candidate: int32 = primes[primes.size()-1];

        prime := false;

        while(!prime) {
            candidate = candidate+1;
            prime = true;

            if Main.verbose {
                IO.printLine(Stringer.format("candidate: %", candidate, ""));
            }

            for divisor : primes {
                if candidate % divisor =*= 0 {
                    prime = false;
                    break;
                }
            }
        }
        primes.add(candidate);
        return candidate;
    }



export class Main:

static verbose: bool = false;

export static main (args: [[char]]) {
    numberOfPrimesToCompute := Strings.parseInt(args[1]).toInt32;
    IO.printLine(Stringer.format("computing % primes!", numberOfPrimesToCompute, ""));

    sieb := Sieb.create(numberOfPrimesToCompute);
    while numberOfPrimesToCompute > 1 {
        IO.printLine(Strings.intToString(sieb.nextPrime()));
        numberOfPrimesToCompute = numberOfPrimesToCompute-1;
    }
}